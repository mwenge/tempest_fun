#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Oct 29 18:11:39 2024
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn pdp11 pdp11_build/tempest.ini
match_max 100000
expect -exact "\r
.D 56=0\r
\r
."
send -- "R MAC65\rRK1:ALWELG=ALWELG\rRK1:ALSCO2=ALSCO2\rRK1:ALDIS2=ALDIS2\rRK1:ALEXEC=ALEXEC\rRK1:ALSOUN=ALSOUN\rRK1:ALVROM=ALVROM\r"
expect -exact "FREE CORE: 12543. WORDS"
send -- "RK1:ALCOIN=ALCOIN\rRK1:ALLANG=ALLANG\rRK1:ALHAR2=ALHAR2\rRK1:ALTES2=ALTES2\rRK1:ALEARO=ALEARO\rRK1:ALVGUT=ALVGUT\r"
expect -exact "FREE CORE: 13178. WORDS"
send -- ""
expect -exact "."
send -- "R LINKM\rRK1:ALEXEC/L,ALEXEC/A=RK1:ALWELG,ALSCO2,ALDIS2,ALEXEC,ALSOUN,ALVROM/C\rALCOIN,ALLANG,ALHAR2,ALTES2,ALEARO,ALVGUT\r"
expect -exact "\r
\r
*"
send -- ""
expect -exact "\r
sim> "
send -- "exit\r"
expect eof
